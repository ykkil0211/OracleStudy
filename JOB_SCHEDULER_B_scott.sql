SELECT USER
FROM DUAL;
--==>> SCOTT

ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD HH24:MI:SS';
--==>> Session이(가) 변경되었습니다.

SET SERVEROUTPUT ON;
--==>> 작업이 완료되었습니다.(0.063초)

--○ 실습 테이블 생성(TBL_JOBTEST)
CREATE TABLE TBL_JOBTEST
( SID       NUMBER
, NAME      VARCHAR2(30)
, TEL       VARCHAR2(40)
, REG_DATE  DATE     DEFAULT SYSDATE
, CONSTRAINT JOBTEST_SID_PK PRIMARY KEY(SID)
);
--==>> Table TBL_JOBTEST이(가) 생성되었습니다.

DROP TABLE TBL_JOBTEST PURGE;

DROP SEQUENCE JOBTESTSEQ;

--○ 시퀀스 생성(JOBTESTSEQ)
CREATE SEQUENCE JOBTESTSEQ
NOCACHE;
--==>> Sequence JOBTESTSEQ이(가) 생성되었습니다.

--○ 프로시저 생성(PRC_JOBTEST)
CREATE OR REPLACE PROCEDURE PRC_JOBTEST
IS
    V_NUM   NUMBER := 0;
BEGIN
    V_NUM := V_NUM + 1;
    
    INSERT INTO TBL_JOBTEST
    VALUES(JOBTESTSEQ.NEXTVAL, '확인'||V_NUM, '010-1234-3434', DEFAULT);
    
    COMMIT;
    
    EXCEPTION
        WHEN OTHERS THEN ROLLBACK;
END;
--==>> Procedure PRC_JOBTEST이(가) 컴파일되었습니다.


-- ○ 프로그램 등록
-- 스케줄러가 돌면서 실제로 구동될 프로그램을 등록함
-- 『DBMS_SCHEDULER.CREATE_PROGRAM』
BEGIN 
    DBMS_SCHEDULER.CREATE_PROGRAM
    ( PROGRAM_NAME => 'TEST_PRG'
    -- 『PROGRAM_NAME』 : 프로그램 이름 
    , PROGRAM_ACTION => 'PRC_JOBTEST'
    -- 『PROJRAM_ACTION』 : 실제 액션이 발생하는 STORED_PROCEDURE
    --                     미리 등록되어 있어야 하며,
    --                     SHELL과 같은 외부 프로그램을 구동할 수도 있음
    , PROGRAM_TYPE => 'STORED_PROCEDURE'
    -- 『PROGRAM_TYPE』 : 'STORED_PROCEDURE' 라고 명시
    , COMMENTS => 'TBL_JOBTEST_PROGRAM'
    -- 『COMMENTS』 : 코멘트, 부가 설명
    , ENABLED => TRUE
    -- 『ENABLED』 : 사용 기능 설정
    );
END;
--==>> PL/SQL 프로시저가 성공적으로 완료되었습니다.


--○ 스케줄러 등록
-- 주기적으로 수행할 스케줄러를 등록함 
-- 『DBMS_SCHEDULER.CREATE_SCHEDULE』
BEGIN
    DBMS_SCHEDULER.CREATE_SCHEDULE
    ( SCHEDULE_NAME => 'SCHEDULE_1_DAY'
    -- 『SCHEDULE_NAME』 : 스케줄의 이름
    , START_DATE => TO_DATE('2024-02-20 09:30:00', 'YYYY-MM-DD HH24:MI:SS')
    -- 『START_DATE』 : 스케줄러 작동의 시작 시각
    , END_DATE => NULL
    -- 『END_DATE』 : 스케줄러의 작동의 종료 시작 (NULL 구성 시 종료하지 않음)
    , REPEAT_INTERVAL => 'FREQ=DAILY; INTERVAL=1'
    -- 『REPEAT_INTERVAL』 : 스케줄러의 작동 주기 
    --                      FREQ를 분단위(FREQ='MINUTELY')로 하고, 30분 마다 (INTERVAL=30) 들게하는 식
    --                      (※ FREQ : Frequncy, 빈도)
    , COMMENTS => 'Every 1 day'
    -- 『COMMENTS』 : 코멘트, 부가 설명
    );
END;
--==>> PL/SQL 프로시저가 성공적으로 완료되었습니다.


-- ○ 잡 등록
-- 실제 수행할 업무로 스케줄러와 프로글매을 명시해줌
-- ※ 오라클에서 스케줄러를 통해 특정 작업을 수행할 때, 그 단위를 JOB 이라고 함 
-- 『DBMS_SCHEDULER.CREATE_JOB』
BEGIN
    DBMS_SCHEDULER.CREATE_JOB
    ( JOB_NAME => 'TEST_JOB'
    -- 『JOB_NAME』 : 작업의 이름
    , PROGRAM_NAME => 'TEST_PRG'
    -- 『PROGRAM_NAME』 : 구동될 프로그램의 이름 
    --                   위에서 등록한 프로그램의 이름을 명시함 
    , SCHEDULE_NAME => 'SCHEDULE_1_DAY'
    -- 『SCHEDULE_NAME』 : 어떤 스케줄러가 돌면서 이 작업을 수행할 것인가에 해당하는 부분으로 
    --                    위에서 등록한 스케줄러의 이름을 명시함
    --, JOB_CLASS → JOB을 CLASS 다누이로 묶어서 관리할 수 있는 속성
    --              스케줄러를 통해 수행되는 작업이 많다면, 관리를 위해 추가할 수 있음
    , ENABLED => TRUE
    -- 『ENABLED』 : 사용 가능 설정 
    );
END;
--==>> PL/SQL 프로시저가 성공적으로 완료되었습니다.


-- ※ 삭제 처리 구문 
EXECUTE DBMS_SCHEDULER.DROP_PROGRAM('TEST_PRG',FALSE);
-- ※ 삭제 처리 구문(스케줄 삭제)
EXECUTE DBMS_SCHEDULER.DPOP_SCHEDULE('SCHEDULE_1_DAY',FALSE);
-- ※ 삭제 처리 구문(잡 삭제)
EXECUTE DBMS_SCHEDULER.DROP_JOB('TEST_JOB',FALSE);

--※ 등록된 JOB 정보 확인 
SELECT *
FROM USER_SCHEDULER_JOBS;
--==>>
/*
JOB_PRC_TEST		REGULAR	SCOTT					PLSQL_BLOCK	BEGIN PRC_TEST(TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')); END;	0			CALENDAR	24/02/19 13:00:00.000000000 +09:00	FREQ=DAILY; INTERVAL=1;								24/02/24 12:59:59.000000000 +09:00	DEFAULT_JOB_CLASS	TRUE	TRUE	FALSE	SCHEDULED	3	1		0		0	24/02/19 13:00:00.021000000 +09:00	+00 00:00:00.016000	24/02/20 13:00:00.000000000 +09:00			OFF	FALSE	TRUE		FALSE	1	NLS_LANGUAGE='KOREAN' NLS_TERRITORY='KOREA' NLS_CURRENCY='￦' NLS_ISO_CURRENCY='KOREA' NLS_NUMERIC_CHARACTERS='.,' NLS_CALENDAR='GREGORIAN' NLS_DATE_FORMAT='YYYY-MM-DD HH24:MI:SS' NLS_DATE_LANGUAGE='KOREAN' NLS_SORT='BINARY' NLS_TIME_FORMAT='HH24:MI:SSXFF' NLS_TIMESTAMP_FORMAT='RR/MM/DD HH24:MI:SSXFF' NLS_TIME_TZ_FORMAT='HH24:MI:SSXFF TZR' NLS_TIMESTAMP_TZ_FORMAT='RR/MM/DD HH24:MI:SSXFF TZR' NLS_DUAL_CURRENCY='￦' NLS_COMP='BINARY' NLS_LENGTH_SEMANTICS='BYTE' NLS_NCHAR_CONV_EXCP='FALSE'		1						FALSE	FALSE	JOB 등록 실습	133168
TEST_JOB		REGULAR	SCOTT			SCOTT	TEST_PRG				SCOTT	SCHEDULE_1_DAY	NAMED	24/02/21 09:30:00.900000000 +09:00										DEFAULT_JOB_CLASS	TRUE	TRUE	FALSE	SCHEDULED	3	0		0		0			24/02/21 09:30:00.900000000 +09:00			OFF	FALSE	TRUE		FALSE	1	NLS_LANGUAGE='KOREAN' NLS_TERRITORY='KOREA' NLS_CURRENCY='￦' NLS_ISO_CURRENCY='KOREA' NLS_NUMERIC_CHARACTERS='.,' NLS_CALENDAR='GREGORIAN' NLS_DATE_FORMAT='YYYY-MM-DD' NLS_DATE_LANGUAGE='KOREAN' NLS_SORT='BINARY' NLS_TIME_FORMAT='HH24:MI:SSXFF' NLS_TIMESTAMP_FORMAT='RR/MM/DD HH24:MI:SSXFF' NLS_TIME_TZ_FORMAT='HH24:MI:SSXFF TZR' NLS_TIMESTAMP_TZ_FORMAT='RR/MM/DD HH24:MI:SSXFF TZR' NLS_DUAL_CURRENCY='￦' NLS_COMP='BINARY' NLS_LENGTH_SEMANTICS='BYTE' NLS_NCHAR_CONV_EXCP='FALSE'		1						FALSE	FALSE		4195380
*/

--※ JOB의 ARGUMENTS 정보 확인
SELECT *
FROM USER_SCHEDULER_JOB_ARGS;
--==>> 조회 결과 없음 

--※ RUNNING 중은 JOB의 정보 확인
SELECT *
FROM USER_SCHEDULER_RUNNING_JOBS;
--==>> 조회 결과 없음 

--※ JOB의 LOG 기록 확인 
SELECT *
FROM USER_SCHEDULER_JOB_LOG;
--==>>
/*
3033	24/02/19 12:00:00.053000000 +09:00	SCOTT	JOB_PRC_TEST		DEFAULT_JOB_CLASS	RUN	FAILED								
3047	24/02/19 13:00:00.037000000 +09:00	SCOTT	JOB_PRC_TEST		DEFAULT_JOB_CLASS	RUN	SUCCEEDED								
3043	24/02/19 13:00:00.024000000 +09:00	SCOTT	JOB_PRC_TEST		DEFAULT_JOB_CLASS	RUN	FAILED								
*/

--※ JOB의 수행된 정보 및 ERROR 정보 확인 
SELECT *
FROM USER_SCHEDULER_JOB_RUN_DETAILS;
--==>>
/*
3033	24/02/19 12:00:00.054000000 +09:00	SCOTT	JOB_PRC_TEST		FAILED	6550	24/02/19 12:00:00.000000000 +09:00	24/02/19 12:00:00.030000000 +09:00	+00 00:00:00.000000	1	74,101	11512	+00 00:00:00.000000					"ORA-06550: line 1, column 756:
PLS-00905: object SCOTT.PRC_TEST is invalid
ORA-06550: line 1, column 756:
PL/SQL: Statement ignored
"
3043	24/02/19 13:00:00.024000000 +09:00	SCOTT	JOB_PRC_TEST		FAILED	6550	24/02/19 13:00:00.000000000 +09:00	24/02/19 13:00:00.008000000 +09:00	+00 00:00:00.000000	1	82,65	15732	+00 00:00:00.010000					"ORA-06550: line 1, column 756:
PLS-00905: object SCOTT.PRC_TEST is invalid
ORA-06550: line 1, column 756:
PL/SQL: Statement ignored
"
3047	24/02/19 13:00:00.037000000 +09:00	SCOTT	JOB_PRC_TEST		SUCCEEDED	0	24/02/19 13:00:00.000000000 +09:00	24/02/19 13:00:00.021000000 +09:00	+00 00:00:00.000000	1	25,109	12448	+00 00:00:00.000000					
*/

--※ 등록된 PROGRAM 정보 확인
SELECT *
FROM USER_SCHEDULER_PROGRAMS;
--==>>
/*
TEST_PRG	STORED_PROCEDURE	PRC_JOBTEST	0	TRUE	FALSE		3	1				NLS_LANGUAGE='KOREAN' NLS_TERRITORY='KOREA' NLS_CURRENCY='￦' NLS_ISO_CURRENCY='KOREA' NLS_NUMERIC_CHARACTERS='.,' NLS_CALENDAR='GREGORIAN' NLS_DATE_FORMAT='YYYY-MM-DD' NLS_DATE_LANGUAGE='KOREAN' NLS_SORT='BINARY' NLS_TIME_FORMAT='HH24:MI:SSXFF' NLS_TIMESTAMP_FORMAT='RR/MM/DD HH24:MI:SSXFF' NLS_TIME_TZ_FORMAT='HH24:MI:SSXFF TZR' NLS_TIMESTAMP_TZ_FORMAT='RR/MM/DD HH24:MI:SSXFF TZR' NLS_DUAL_CURRENCY='￦' NLS_COMP='BINARY' NLS_LENGTH_SEMANTICS='BYTE' NLS_NCHAR_CONV_EXCP='FALSE'	TBL_JOBTEST_PROGRAM
*/

--※ PROGRAM의 매개변수 정보 확인
SELECT *
FROM USER_SCHEDULER_PROGRAM_ARGS;
--==>> 조회 결과 없음 

--※ 등록된 스케줄러 정보 확인
SELECT *
FROM USER_SCHEDULER_SCHEDULES;
--==>>
/*
SCHEDULE_1_DAY	CALENDAR	24/02/20 09:30:00.000000000 +09:00	FREQ=DAILY; INTERVAL=1								Every 1 day
*/

SELECT *
FROM TBL_JOBTEST;
-- (09:28 기준)
--==>> 조회 결과 없음 
-- (2024-02-21 09:30 기준)
--==>> 1	확인1	010-1234-3434	2024-02-21 09:30:00
