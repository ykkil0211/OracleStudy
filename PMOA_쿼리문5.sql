-- 게시판 페이징 처리 
-- 게시물 번호의 최대값을 얻어내는 쿼리문 구성
SELECT NVL(MAX(MEM_CODE),0) AS MAXNUM
FROM MEMBER;
--==>> MEM0073

-- 탈퇴한 회원 제외한 회원 번호 +1 씩 하는 구문 
SELECT TO_CHAR(LPAD(SUBSTR(M.MEM_CODE,4,5)+1 , 4,'0'))
FROM MEMBER M LEFT JOIN CLOSE_MEMBER CL ON M.MEM_CODE = CL.MEM_CODE
WHERE CL.CM_CODE IS NULL
ORDER BY M.MEM_CODE;

-- 회원 갯수 가져오기 
SELECT COUNT(*)
FROM REAL_MEM_COUNT;

SELECT *
FROM MEMBER
WHERE ROWNUM <= 10
ORDER BY MEM_CODE;

-- 특정 영역 (시작번호 / 끝 번호) 게시물 목록을 읽어오는 쿼리문 구성 
SELECT RN, MEM_CODE, ID, PW, NICKNAME, POST, COMMENTS, KDATE, MBTI
FROM
(
    SELECT DATA.*
    FROM
    (
    SELECT ROWNUM AS RN,A.MEM_CODE, A.ID, A.PW, A.NICKNAME, A.POST, A.COMMENTS, TO_CHAR(A.KDATE, 'YYYY-MM-DD') AS KDATE, A.MBTI
    FROM ALL_MEMBER_VIEW A
         LEFT JOIN CLOSE_MEMBER CR ON CR.MEM_CODE = A.MEM_CODE
    WHERE CR.CM_CODE IS NULL
    ORDER BY MEM_CODE DESC
    ) DATA
)
WHERE RN >= 51 AND RN <=60;

--○ 특정 게시물(50)의 다음 번호 읽어오는 쿼리문 구성
SELECT count(*) AS NEXTNUM 
FROM real_mem_count
WHERE MEM_CODE> 'MEM0050';
--> 한 줄 구성

 
--○ 특정 게시물(50)의 이전 번호 읽어오는 쿼리문 구성
SELECT NVL(MAX(MEM_CODE),-1) AS BEFORENUM 
FROM real_mem_count
WHERE MEM_CODE<'MEM0050';
--> 한 줄 구성

------------------ 페이징 처리할 쿼리문 구성
SELECT MEM_CODE, ID, PW, NICKNAME, POST, COMMENTS, KDATE, MBTI
FROM (
    SELECT ROWNUM AS RN, A.*
    FROM (
        SELECT MEM_CODE, ID, PW, NICKNAME, POST, COMMENTS, KDATE, MBTI
        FROM REAL_MEM_COUNT
        ORDER BY MEM_CODE DESC
    ) A
    WHERE ROWNUM <= 10 -- 페이지당 표시할 개수
)
WHERE RN >= 1; -- 원하는 페이지 번호

-------------
SELECT MEM_CODE, ID, PW, NICKNAME, POST, COMMENTS, KDATE, MBTI
FROM (
      SELECT ROWNUM AS RN, A.*
      FROM (
                SELECT MEM_CODE, ID, PW, NICKNAME, POST, COMMENTS, KDATE, MBTI
                FROM REAL_MEM_COUNT
                ORDER BY MEM_CODE DESC
            ) A
            WHERE ROWNUM <= 10
        )
 WHERE RN >= 1;
 
 ----------------------------- 개설 신청 조회 
SELECT *
FROM APP_OPENING;

SELECT APP.MEM_CODE, APP.AP_CODE AS CODE, TO_CHAR(APP.SDATE, 'YYYY-MM-DD') AS KDATE,APP.NUMBERS, APP.VIEWS
FROM APP_OPENING APP 
LEFT JOIN AO_COMMENT 
(
        SELECT (
                    SELECT *
                    FROM AO_COMMENT
               ) AS COUNT
)
ON AO.AC_CODE = APP.AP_CODE;

SELECT *
FROM AO_COMMENT;

DESC AO_COMMENT;

DESC AO_REPLY2;

SELECT *
FROM AO_REPLY2;

SELECT * 
FROM APP_OPENING APP
    JOIN AO_COMMENT AO ON AO.AP_CODE = APP.AP_CODE;



SELECT M.MEM_CODE, M.ID, M.PW, M.NICKNAME, M.MBTI_CODE, ADMIN_CODE
FROM MEMBER M
    LEFT JOIN ADMIN A ON M.MEM_CODE = A.MEM_CODE;

-- 개설 신청 
CREATE OR REPLACE VIEW APP_ALL_BOARD_VIEW
AS
SELECT APP.MEM_CODE
     , APP.AP_CODE AS CODE
     , TO_CHAR(APP.SDATE, 'YYYY-MM-DD') AS KDATE
     , APP.TITLE
     , APP.NUMBERS 
     , APP.VIEWS
     , NVL(COUNT.AC_COUNT, 0) + NVL(A2_COUNT.RECOMMENT_COUNT, 0) AS COUNT
    
FROM 
    APP_OPENING APP 
    LEFT JOIN 
    (
        SELECT AP_CODE, COUNT(*) AS AC_COUNT
        FROM AO_COMMENT
        GROUP BY AP_CODE
    ) COUNT
    ON COUNT.AP_CODE = APP.AP_CODE
    
    LEFT OUTER JOIN
    (
        SELECT AP2.AP_CODE AS AP_CODE
             , COUNT(A2.A2_CODE) AS RECOMMENT_COUNT
        FROM APP_OPENING AP2
             INNER JOIN AO_COMMENT AC
                ON AP2.AP_CODE = AC.AP_CODE
             INNER JOIN AO_REPLY2 A2
                ON AC.AC_CODE = A2.AC_CODE
        GROUP BY AP2.AP_CODE

     ) A2_COUNT
     ON A2_COUNT.AP_CODE = APP.AP_CODE
ORDER BY CODE ASC;

SELECT MEM_CODE, CODE,TITLE, KDATE, VIEWS, COUNT
FROM APP_ALL_BOARD_VIEW;

delete 
from app_opening
where ap_code = 'AP0002';

-- 기술 게시판
CREATE OR REPLACE VIEW TE_ALL_BOARD_VIEW
AS
SELECT TE.MEM_CODE
, TE.TQ_CODE AS CODE
, TE.TITLE
, TO_CHAR(TE.KDATE,'YYYY-MM-DD') AS KDATE
, TE.VIEWS
, NVL(COUNT.TQ_COUNT,0) + NVL(A2_COUNT.RECOMMENT_COUNT,0)AS COUNT
FROM TECH_QNA TE
    LEFT JOIN 
    (
        SELECT TQ_CODE, COUNT(*) AS TQ_COUNT
        FROM TQ_COMMENT
        GROUP BY TQ_CODE
    ) COUNT 
    ON COUNT.TQ_CODE = TE.TQ_CODE
    LEFT OUTER JOIN
    (
        SELECT TE2.TQ_CODE AS TQ_CODE
                , COUNT(TQR.T2_CODE) AS RECOMMENT_COUNT
        FROM TECH_QNA TE2
            INNER JOIN TQ_COMMENT TQ
                ON TE2.TQ_CODE = TQ.TQ_CODE
            INNER JOIN TQ_REPLY2 TQR
                ON TQR.TC_CODE = TQ.TC_CODE
        GROUP BY TE2.TQ_CODE
    ) A2_COUNT
     ON A2_COUNT.TQ_CODE = TE.TQ_CODE
ORDER BY CODE ASC;

SELECT MEM_CODE, TITLE,KDATE,VIEWS,COUNT
FROM TE_ALL_BOARD_VIEW;

CREATE OR REPLACE VIEW CQ_ALL_BOARD_VIEW
AS
SELECT C.MEM_CODE, C.CQ_CODE AS CODE, C.TITLE, C.VIEWS, TO_CHAR(C.KDATE,'YYYY-MM-DD') AS KDATE
, NVL(COUNT.CQ_COUNT,0) + NVL(A2_COUNT.RECOMMENT_COUNT,0) AS COUNT
FROM C_QNA C
    LEFT JOIN 
    (
        SELECT CQ_CODE, COUNT(*) AS CQ_COUNT
        FROM CQ_COMMENT 
        GROUP BY CQ_CODE
    ) COUNT
    ON COUNT.CQ_CODE = C.CQ_CODE
    LEFT OUTER JOIN
    (
        SELECT C2.CQ_CODE, COUNT(CQR.CQ2_CODE) AS RECOMMENT_COUNT
        FROM C_QNA C2
            INNER JOIN CQ_COMMENT CQ
                ON CQ.CQ_CODE = C2.CQ_CODE
            INNER JOIN CQ_REPLY2 CQR
                ON CQR.CQC_CODE = CQ.CQC_CODE
            GROUP BY C2.CQ_CODE
    )A2_COUNT
        ON A2_COUNT.CQ_CODE = C.CQ_CODE
        ORDER BY CODE ASC;
        

SELECT MEM_CODE,CODE,TITLE,VIEWS,KDATE, COUNT
FROM CQ_ALL_BOARD_VIEW;


CREATE OR REPLACE VIEW P_ALL_BOARD_VIEW
AS
SELECT 
    P.MEM_CODE, 
    P.P_CODE AS CODE, 
    P.TITLE, 
    TO_CHAR(P.KDATE,'YYYY-MM-DD') AS KDATE,
    P.VIEWS,
    NVL(COUNT.P_COUNT,0) + NVL(P_COUNT.RECOMMENT_COUNT,0) AS COUNT
FROM 
    PORTFOLIO P
LEFT JOIN (
        SELECT P_CODE, COUNT(*) AS P_COUNT
        FROM P_COMMENT PC
        GROUP BY P_CODE
    ) COUNT
ON COUNT.P_CODE = P.P_CODE
LEFT JOIN (
        SELECT P2.P_CODE, COUNT(PRE.P2_CODE) AS RECOMMENT_COUNT
        FROM PORTFOLIO P2
        INNER JOIN P_COMMENT PC ON P2.P_CODE = PC.P_CODE
        INNER JOIN P_REPLY2 PRE ON PC.PC_CODE = PRE.PC_CODE
        GROUP BY P2.P_CODE
    ) P_COUNT ON P_COUNT.P_CODE = P.P_CODE
ORDER BY CODE ASC;

SELECT *
FROM P_ALL_BOARD_VIEW;

SELECT MEM_CODE, CODE, TITLE, KDATE, VIEWS, COUNT
FROM P_ALL_BOARD_VIEW;

SELECT *
FROM PORTFOLIO;

SELECT *
FROM P_COMMENT;

SELECT *
FROM P_REPLY2;

SELECT C.CP_CODE,A.PRJ_NAME,M.NICKNAME, A.NUMBERS,TO_CHAR(A.KDATE,'YYYY-MM-DD') AS KDATE, A.SDATE, A.EDATE, A.VIEWS
FROM C_PROJECT C 
    JOIN APP_OPENING A
        ON C.AP_CODE = A.AP_CODE
    JOIN MEMBER M
        ON M.MEM_CODE = A.MEM_CODE
ORDER BY CP_CODE;

SELECT *
FROM APP_OPENING;

SELECT *
FROM C_PROJECT;

SELECT *
FROM MEMBER_APPLY;


SELECT M.NICKNAME,M.ID, O.담당직무 AS CARRER, O.프로젝트시작일 AS KDATE
FROM OPEN_PRJ_MEMBERS_VIEW O
    JOIN MEMBER M 
        ON O.회원코드 = M.MEM_CODE
WHERE 개설확정코드 = 'CP0001' AND 합격여부 = '합격';


SELECT *
FROM ROLE_COMP R JOIN APP_OPENING A ON R.AP_CODE = A.AP_CODE
WHERE R.AP_CODE = 'AP0005';

SELECT *
FROM MEMBER M JOIN MEMBER_APPLY ME ON M.MEM_CODE = ME.MEM_CODE;



SELECT M.MEM_CODE   AS "회원코드"
     , M.NICKNAME   AS "닉네임"
     , MA.MA_CODE   AS "멤버지원코드"
     , AR.RESULT    AS "합격여부"
     , MR.ROLE      AS "담당직무"
     , AP.PRJ_NAME  AS "프로젝트명"
     , TO_CHAR(AP.SDATE,'YYYY-MM-DD') AS SDATE     
     , TO_CHAR(AP.EDATE,'YYYY-MM-DD')     AS EDATE
     , AP.NUMBERS   
     , AP.AP_CODE   
     , CP.CP_CODE   
FROM MEMBER M
     INNER JOIN MEMBER_APPLY MA
        ON M.MEM_CODE = MA.MEM_CODE
     INNER JOIN ROLE_COMP RC
        ON MA.RC_CODE = RC.RC_CODE
     INNER JOIN A_RESULT AR
        ON MA.AR_CODE = AR.AR_CODE
     INNER JOIN MEMBER_ROLE MR
        ON RC.MR_CODE = MR.MR_CODE
     INNER JOIN APP_OPENING AP
        ON RC.AP_CODE = AP.AP_CODE
     INNER JOIN C_PROJECT CP
        ON AP.AP_CODE = CP.AP_CODE;
        
        
SELECT P_NICKNAME,P_MEMBER_ROLE,BACKEND_SCORE, FRONTEND_SCORE
FROM PJ_MEMBER_SCORE_INFO_VIEW
WHERE CP_CODE='CP0001';


		SELECT M.MEM_CODE, M.ID, M.PW, M.NICKNAME, M.MBTI_CODE, ADMIN_CODE
		FROM MEMBER M
			LEFT JOIN ADMIN A ON M.MEM_CODE = A.MEM_CODE
		WHERE PW = '123' AND ID = 'QWE';
        
SELECT *
FROM MEMBER;

------------------------------------------------------------------ 탈퇴한 회원 페이징
SELECT RN, MEM_CODE, NICKNAME, KDATE, TYPE, R_CONTENT, R_DATE, PENALTY, REASON, PRO_DATE, PROCESS
FROM
(
    SELECT DATA.*
    FROM
    (
		SELECT ROWNUM AS RN,PE.MEM_CODE, PE.NICKNAME, TO_CHAR(PE.KDATE, 'YYYY-MM-DD') AS KDATE, PE.TYPE, PE.R_CONTENT
		      , TO_CHAR(PE.R_DATE, 'YYYY-MM-DD') AS R_DATE, PENALTY
		      , REASON, TO_CHAR(PE.PRO_DATE, 'YYYY-MM-DD') AS PRO_DATE, PE.PROCESS
		FROM PENALTY_ALL_MEMBER PE
        ORDER BY MEM_CODE DESC
    ) DATA
)
WHERE RN >= 10 AND RN <=20;

---------------------------------------------- 회원 탈퇴 페이징 처리
SELECT RN, MEM_CODE, ID, PW, NICKNAME, KDATE, POST, COMMENTS, MBTI, CLOSE_DATE
FROM
(
    SELECT DATA.*
    FROM
    (
		SELECT ROWNUM AS RN, MEM_CODE, ID, PW, NICKNAME, KDATE, POST, COMMENTS, MBTI, CLOSE_DATE
		FROM CLOSE_MEMBER_VIEW
        ORDER BY MEM_CODE DESC
    ) DATA
)
WHERE RN >= 1 AND RN <=10;


------------------------------------------------------- 들어온 신고 처리 페이지

SELECT RN, MEM_CODE,ID,NICKNAME,CODE, REASON, CONTENT, KDATE, PENALTY
FROM
(
    SELECT DATA.*
    FROM
    (
		SELECT ROWNUM AS RN, MEM_CODE,ID,NICKNAME,CODE, REASON, CONTENT, TO_CHAR(KDATE,'YYYY-MM-DD') AS KDATE, PENALTY
		FROM PRO_GET_REPORT_VIEW
		WHERE PENALTY ='-1'
		ORDER BY MEM_CODE DESC
    ) DATA
)
WHERE RN >= 1 AND RN <=10;

		SELECT COUNT(*) AS COUNT
		FROM PRO_GET_REPORT_VIEW
		WHERE PENALTY ='-1'
		ORDER BY MEM_CODE;

-- 기술 
SELECT RN, MEM_CODE,ID,NICKNAME,CODE, REASON, CONTENT, KDATE, PENALTY
FROM
(
    SELECT DATA.*
    FROM
    (
		SELECT  ROWNUM AS RN,MEM_CODE,ID,NICKNAME,CODE, REASON, CONTENT
			, TO_CHAR(KDATE,'YYYY-MM-DD') AS KDATE, PENALTY
		FROM TQ_GET_REPORT_VIEW
		WHERE PENALTY ='-1'
		ORDER BY MEM_CODE
    ) DATA
)
WHERE RN >= 1 AND RN <=10;

		SELECT COUNT(*) AS COUNT
		FROM TQ_GET_REPORT_VIEW
		WHERE PENALTY ='-1'
		ORDER BY MEM_CODE;
        
---- 커리어
SELECT RN, MEM_CODE,ID,NICKNAME,CODE, REASON, CONTENT, KDATE, PENALTY
FROM
(
    SELECT DATA.*
    FROM
    (
		SELECT ROWNUM AS RN, MEM_CODE, ID, NICKNAME, CODE, REASON, CONTENT, TO_CHAR(KDATE,'YYYY-MM-DD') AS KDATE, PENALTY
		FROM CQ_GET_REPORT_VIEW
		WHERE PENALTY = '-1'
		ORDER BY MEM_CODE
    ) DATA
)
WHERE RN >= 1 AND RN <=10;

		SELECT COUNT(*) AS COUNT
		FROM CQ_GET_REPORT_VIEW
		WHERE PENALTY ='-1'
		ORDER BY MEM_CODE;

---- 포트폴리오
SELECT RN, MEM_CODE,ID,NICKNAME,CODE, REASON, CONTENT, KDATE, PENALTY
FROM
(
    SELECT DATA.*
    FROM
    (
		SELECT ROWNUM AS RN, MEM_CODE, ID, NICKNAME, CODE, REASON, CONTENT, TO_CHAR(KDATE,'YYYY-MM-DD') AS KDATE, PENALTY
		FROM PT_GET_REPORT_VIEW
		WHERE PENALTY = '-1'
		ORDER BY MEM_CODE
    ) DATA
)
WHERE RN >= 1 AND RN <=10;

		SELECT COUNT(*) AS COUNT
		FROM PT_GET_REPORT_VIEW
		WHERE PENALTY ='-1'
		ORDER BY MEM_CODE;
        

----------------------------------------------- 신고 처리

-- 개설 신청
SELECT RN, MEM_CODE,ID,NICKNAME,CODE, REASON, CONTENT,KDATE, PENALTY, PE_NAME
FROM
(
    SELECT DATA.*
    FROM
    (
		SELECT ROWNUM AS RN, MEM_CODE,ID,NICKNAME,CODE, REASON, CONTENT, TO_CHAR(KDATE,'YYYY-MM-DD') AS KDATE, PENALTY, PE_NAME
		FROM PRO_GET_PROCESS_VIEW
		ORDER BY KDATE DESC
    ) DATA
)
WHERE RN >= 1 AND RN <=10;

		SELECT COUNT(*) AS COUNT
		FROM PRO_GET_PROCESS_VIEW
		ORDER BY KDATE;

-- 기술 신청
SELECT RN, MEM_CODE,ID,NICKNAME,CODE, REASON, CONTENT,KDATE, PENALTY, PE_NAME
FROM
(
    SELECT DATA.*
    FROM
    (
		SELECT ROWNUM AS RN, MEM_CODE,ID,NICKNAME,CODE, REASON, CONTENT, TO_CHAR(KDATE,'YYYY-MM-DD') AS KDATE, PENALTY, PE_NAME
		FROM TQ_GET_PROCESS_VIEW
		ORDER BY KDATE DESC
    ) DATA
)
WHERE RN >= 1 AND RN <=10;

		SELECT COUNT(*) AS COUNT
		FROM TQ_GET_PROCESS_VIEW
		ORDER BY KDATE;
        
-- 커리어 신청 
SELECT RN, MEM_CODE,ID,NICKNAME,CODE, REASON, CONTENT,KDATE, PENALTY, PE_NAME
FROM
(
    SELECT DATA.*
    FROM
    (
		SELECT ROWNUM AS RN, MEM_CODE, ID, NICKNAME, CODE, REASON, CONTENT, TO_CHAR(KDATE,'YYYY-MM-DD') AS KDATE, PENALTY, PE_NAME
		FROM CQ_GET_PROCESS_VIEW
		ORDER BY KDATE DESC
    ) DATA
)
WHERE RN >= 1 AND RN <=10;

		SELECT COUNT(*) AS COUNT
		FROM CQ_GET_PROCESS_VIEW
		ORDER BY KDATE;
        

-- 포트폴리오 
SELECT RN, MEM_CODE,ID,NICKNAME,CODE, REASON, CONTENT,KDATE, PENALTY, PE_NAME
FROM
(
    SELECT DATA.*
    FROM
    (
		SELECT ROWNUM AS RN, MEM_CODE, ID, NICKNAME, CODE, REASON, CONTENT, TO_CHAR(KDATE,'YYYY-MM-DD') AS KDATE, PENALTY, PE_NAME
		FROM PT_GET_PROCESS_VIEW
		ORDER BY KDATE DESC
    ) DATA
)
WHERE RN >= 1 AND RN <=10;

		SELECT COUNT(*) AS COUNT
		FROM PT_GET_PROCESS_VIEW
		ORDER BY KDATE;
        
------------------------------------------------------- 모든 게시판 조회
-- 개설 신청
SELECT RN, MEM_CODE, CODE,TITLE, KDATE, VIEWS, COUNT
FROM
(
    SELECT DATA.*
    FROM
    (
		SELECT ROWNUM AS RN, MEM_CODE, CODE,TITLE, KDATE, VIEWS, COUNT
		FROM APP_ALL_BOARD_VIEW
        ORDER BY MEM_CODE DESC
    ) DATA
)
WHERE RN >= 30 AND RN <=40;


		SELECT COUNT(*) AS COUNT
		FROM APP_ALL_BOARD_VIEW
        ORDER BY MEM_CODE DESC;
        
-- 기술 
SELECT RN, MEM_CODE, CODE,TITLE, KDATE, VIEWS, COUNT
FROM
(
    SELECT DATA.*
    FROM
    (
		SELECT ROWNUM AS RN,MEM_CODE, CODE,TITLE, KDATE, VIEWS, COUNT
		FROM TE_ALL_BOARD_VIEW
        ORDER BY MEM_CODE DESC
    ) DATA
)
WHERE RN >= 1 AND RN <=10;


		SELECT COUNT(*) AS COUNT
		FROM TE_ALL_BOARD_VIEW
        ORDER BY MEM_CODE DESC;

-- 커리어 
SELECT RN, MEM_CODE, CODE,TITLE, KDATE, VIEWS, COUNT
FROM
(
    SELECT DATA.*
    FROM
    (
		SELECT ROWNUM AS RN,MEM_CODE,CODE,TITLE,VIEWS,KDATE, COUNT
		FROM CQ_ALL_BOARD_VIEW
        ORDER BY MEM_CODE DESC
    ) DATA
)
WHERE RN >= 1 AND RN <=10;


		SELECT COUNT(*) AS COUNT
		FROM CQ_ALL_BOARD_VIEW
        ORDER BY MEM_CODE DESC;
        
-- 포트폴리오  
SELECT RN, MEM_CODE, CODE,TITLE, KDATE, VIEWS, COUNT
FROM
(
    SELECT DATA.*
    FROM
    (
		SELECT ROWNUM AS RN, MEM_CODE, CODE, TITLE, KDATE, VIEWS, COUNT
		FROM P_ALL_BOARD_VIEW
        ORDER BY MEM_CODE DESC
    ) DATA
)
WHERE RN >= 1 AND RN <=10;


		SELECT COUNT(*) AS COUNT
		FROM P_ALL_BOARD_VIEW
        ORDER BY MEM_CODE DESC;
        
        
-------------------------------------- 프로젝트 페이징 
SELECT RN, MEM_CODE, CODE,TITLE, KDATE, VIEWS, COUNT
FROM
(
    SELECT DATA.*
    FROM
    (
		SELECT ROWNUM AS RN,MEM_CODE,CODE,TITLE,VIEWS,KDATE, COUNT
		FROM CQ_ALL_BOARD_VIEW
        ORDER BY MEM_CODE DESC
    ) DATA
)
WHERE RN >= 1 AND RN <=10;


		SELECT COUNT(*) AS COUNT
		FROM CQ_ALL_BOARD_VIEW
        ORDER BY MEM_CODE DESC;
        
-- 포트폴리오  
SELECT RN, CP_CODE, PRJ_NAME, NICKNAME, NUMBERS, KDATE, SDATE, EDATE, VIEWS
FROM
(
    SELECT DATA.*
    FROM
    (
		SELECT ROWNUM AS RN,C.CP_CODE,A.PRJ_NAME,M.NICKNAME, A.NUMBERS, TO_CHAR(A.KDATE,'YYYY-MM-DD') AS KDATE, TO_CHAR(A.SDATE,'YYYY-MM-DD') AS SDATE, TO_CHAR(A.EDATE,'YYYY-MM-DD') AS EDATE, A.VIEWS
		FROM C_PROJECT C 
		    JOIN APP_OPENING A
		        ON C.AP_CODE = A.AP_CODE
		    JOIN MEMBER M
		        ON M.MEM_CODE = A.MEM_CODE
		ORDER BY CP_CODE
    ) DATA
)
WHERE RN >= 1 AND RN <=10;

		SELECT COUNT(*) AS COUNT
		FROM C_PROJECT C 
		    JOIN APP_OPENING A
		        ON C.AP_CODE = A.AP_CODE
		    JOIN MEMBER M
		        ON M.MEM_CODE = A.MEM_CODE
		ORDER BY CP_CODE;
        
        
SELECT *
FROM TQ_REPORT;


		SELECT MEM_CODE,ID,NICKNAME,CODE, REASON, CONTENT
			, TO_CHAR(KDATE,'YYYY-MM-DD') AS KDATE, PENALTY
		FROM TQ_GET_REPORT_VIEW
		WHERE PENALTY ='-1'
		ORDER BY MEM_CODE;


DELETE 
FROM MEMBER 
WHERE MEM_CODE='MEM0085';