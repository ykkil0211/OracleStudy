SELECT USER
FROM DUAL;
-- HR

-- ㅇㅇ 팀 별 실습 수행 과제 ㅇㅇ --

-- 제출 파일명
-- 20231031_03_hr(4팀_길현욱).sql
-- 20231031_03_hr(4팀_길현욱) 수행후기.text

--hr 샘플스키마 ERD를 이용한 테이블 재구성~!!

-- 팀별로.. HR 샘플스키마에 있는 기본 테이블(7개)
-- COUNTRIES4 / DEPARTMENTS4 / EMPLOYEES4 / JOBS4 / JOB_HISTORY4 / LOCATIONS4 / REGIONS4

-- 1. 기존 대상 테이블들의 정보 수집 
-- 2. 테이블 생성(컬럼이름, 자료형, DEFAULT 표현식, NOT NULL 등...)
-- 3. 제약조건 설정(PK,U,FK, CK, ...) 
-- 4. 데이터 입력 

SELECT *
FROM TAB;

PURGE RECYCLEBIN;
-- RECYCLEBIN이(가) 비워졌습니다.

desc countries; 
desc DEPARTMENTS;
DESC EMPLOYEES;
DESC JOBS;
DESC JOB_HISTORY;
DESC LOCATIONS;
DESC REGIONS;

SELECT COUNT(*)
FROM  countries;
-- 25

SELECT COUNT(*)
FROM  DEPARTMENTS;
-- 27

SELECT COUNT(*)
FROM  EMPLOYEES;
--107

SELECT COUNT(*)
FROM  JOBS;

SELECT COUNT(*)
FROM  JOB_HISTORY;
-- 10

SELECT COUNT(*)
FROM  LOCATIONS;
-- 23

SELECT COUNT(*)
FROM REGIONS;
-- 4

SELECT *
FROM countries; 

SELECT *
FROM LOCATIONS; 


---------------------------------------------------------------------------


SELECT *
FROM REGIONS; -- REGION_ID

SELECT *
FROM COUNTRIES; --CONTIRES_ID

---

SELECT *
FROM LOCATIONS; -- LOCATION_ID

SELECT *
FROM  DEPARTMENTS;

---
SELECT *
FROM  EMPLOYEES; -- EMPLOYEED_ID

SELECT *
FROM JOB_HISTORY; -- JOB_ID

SELECT *
FROM  JOBS;

---


----------------------------------개인키 확인-----------------------------------
SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'REGIONS';
/*
HR	REGION_ID_NN	REGIONS	C	REGION_ID	"REGION_ID" IS NOT NULL	
HR	REG_ID_PK	REGIONS	P	REGION_ID		
*/

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'COUNTRIES';
/*
HR	COUNTRY_ID_NN	COUNTRIES	C	COUNTRY_ID	"COUNTRY_ID" IS NOT NULL	
HR	COUNTRY_C_ID_PK	COUNTRIES	P	COUNTRY_ID		
HR	COUNTR_REG_FK	COUNTRIES	R	REGION_ID		NO ACTION
*/

-------------
SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'LOCATIONS';
/*
HR	LOC_CITY_NN	LOCATIONS	C	CITY	"CITY" IS NOT NULL	
HR	LOC_ID_PK	LOCATIONS	P	LOCATION_ID		
HR	LOC_C_ID_FK	LOCATIONS	R	COUNTRY_ID		NO ACTION
*/
SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'DEPARTMENTS';
/*
HR	DEPT_NAME_NN	DEPARTMENTS	C	DEPARTMENT_NAME	"DEPARTMENT_NAME" IS NOT NULL	
HR	DEPT_ID_PK	DEPARTMENTS	P	DEPARTMENT_ID		
HR	DEPT_LOC_FK	DEPARTMENTS	R	LOCATION_ID		NO ACTION
HR	DEPT_MGR_FK	DEPARTMENTS	R	MANAGER_ID		NO ACTION
*/
---------------
SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'EMPLOYEES';
/*
HR	EMP_LAST_NAME_NN	EMPLOYEES	C	LAST_NAME	"LAST_NAME" IS NOT NULL	
HR	EMP_EMAIL_NN	EMPLOYEES	C	EMAIL	"EMAIL" IS NOT NULL	
HR	EMP_HIRE_DATE_NN	EMPLOYEES	C	HIRE_DATE	"HIRE_DATE" IS NOT NULL	
HR	EMP_JOB_NN	EMPLOYEES	C	JOB_ID	"JOB_ID" IS NOT NULL	
HR	EMP_SALARY_MIN	EMPLOYEES	C	SALARY	salary > 0	
HR	EMP_EMAIL_UK	EMPLOYEES	U	EMAIL		
HR	EMP_EMP_ID_PK	EMPLOYEES	P	EMPLOYEE_ID		
HR	EMP_DEPT_FK	EMPLOYEES	R	DEPARTMENT_ID		NO ACTION
HR	EMP_JOB_FK	EMPLOYEES	R	JOB_ID		NO ACTION
HR	EMP_MANAGER_FK	EMPLOYEES	R	MANAGER_ID		NO ACTION
*/
SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'JOB_HISTORY';
/*
HR	JHIST_EMPLOYEE_NN	JOB_HISTORY	C	EMPLOYEE_ID	"EMPLOYEE_ID" IS NOT NULL	
HR	JHIST_START_DATE_NN	JOB_HISTORY	C	START_DATE	"START_DATE" IS NOT NULL	
HR	JHIST_END_DATE_NN	JOB_HISTORY	C	END_DATE	"END_DATE" IS NOT NULL	
HR	JHIST_JOB_NN	JOB_HISTORY	C	JOB_ID	"JOB_ID" IS NOT NULL	
HR	JHIST_DATE_INTERVAL	JOB_HISTORY	C	START_DATE	end_date > start_date	
HR	JHIST_DATE_INTERVAL	JOB_HISTORY	C	END_DATE	end_date > start_date	
HR	JHIST_EMP_ID_ST_DATE_PK	JOB_HISTORY	P	EMPLOYEE_ID		
HR	JHIST_EMP_ID_ST_DATE_PK	JOB_HISTORY	P	START_DATE		
HR	JHIST_JOB_FK	JOB_HISTORY	R	JOB_ID		NO ACTION
HR	JHIST_EMP_FK	JOB_HISTORY	R	EMPLOYEE_ID		NO ACTION
HR	JHIST_DEPT_FK	JOB_HISTORY	R	DEPARTMENT_ID		NO ACTION
*/
SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'JOBS';
/*
HR	JOB_TITLE_NN	JOBS	C	JOB_TITLE	"JOB_TITLE" IS NOT NULL	
HR	JOB_ID_PK	JOBS	P	JOB_ID		
*/

CREATE TABLE LOCATIONS4
( LOCATION_ID             NUMBER(4) --P
, STREET_ADDRESS          VARCHAR2(40)
, POSTAL_CODE             VARCHAR2(12)
, CITY                    VARCHAR2(30) -- C
, STATE_PROVINCE          VARCHAR2(25) 
, COUNTRY_ID              CHAR(2) -- R
, CONSTRAINT LOC4_CITY_NN CHECK(CITY IS NOT NULL)
, CONSTRAINT LOC4_ID_PK PRIMARY KEY(LOCATION_ID)
, CONSTRAINT LOC4_C_ID_FK FOREIGN KEY(COUNTRY_ID)
            REFERENCES COUNTRIES(COUNTRY_ID)
);


CREATE TABLE LOCATIONS4
( LOCATION_ID             NUMBER(4) --P
, STREET_ADDRESS          VARCHAR2(40)
, POSTAL_CODE             VARCHAR2(12)
, CITY                    VARCHAR2(30) -- C
, STATE_PROVINCE          VARCHAR2(25) 
, COUNTRY_ID              CHAR(2) -- R
, CONSTRAINT LOC4_ID_PK PRIMARY KEY(LOCATION_ID)
, CONSTRAINT LOC4_C_ID_FK FOREIGN KEY(COUNTRY_ID)
            REFERENCES COUNTRIES(COUNTRY_ID)
);

alter table LOCATIONS4
modify CITY VARCHAR2(30) CONSTRAINT LOC4_CITY_NN not null;

DESC LOCATIONS4;

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'LOCATIONS4';
/*
HR	LOC4_ID_PK	    LOCATIONS4	P	LOCATION_ID		
HR	LOC4_C_ID_FK	LOCATIONS4	R	COUNTRY_ID		NO ACTION
HR	LOC4_CITY_NN	LOCATIONS4	C	CITY	"CITY" IS NOT NULL	
*/
/*
HR	LOC_CITY_NN	LOCATIONS	C	CITY	"CITY" IS NOT NULL	
HR	LOC_ID_PK	LOCATIONS	P	LOCATION_ID		
HR	LOC_C_ID_FK	LOCATIONS	R	COUNTRY_ID		NO ACTION
*/
SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME = 'LOCATIONS4';

DROP TABLE LOCATIONS4;

SELECT *
FROM LOCATIONS;

INSERT INTO LOCATIONS4(LOCATION_ID, STREET_ADDRESS,POSTAL_CODE
            ,CITY,STATE_PROVINCE,CONTRY_ID) 
            VALUES(1700,	'2004 Charade Rd',	'98199'	,'Seattle',	'Washington',	'US');



SELECT *
FROM LOCATIONS;

SELECT *
FROM USER_TAB_COLUMNS
WHERE TABLE_NAME= 'LOCATIONS';
